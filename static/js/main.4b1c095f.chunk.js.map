{"version":3,"sources":["components/CurrencyRow.jsx","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","handleCurrencyChange","amount","handleInputChange","className","type","value","onChange","map","option","key","App","fromAmount","toAmount","useState","setcurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","error","console","log","alert","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAwBeA,MAtBf,SAAqBC,GAAQ,IAEzBC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,qBACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,kBAEF,OACE,yBAAKC,UAAU,gBACb,2BAAOC,KAAK,SAASC,MAAOJ,EAAQK,SAAUJ,IAC9C,4BAAQG,MAAON,EAAkBO,SAAUN,GACxCF,EAAgBS,KAAI,SAACC,GAAD,OACnB,4BAAQC,IAAKD,EAAQH,MAAOG,GACzBA,SCyEEE,MApFf,WAAgB,IAQVC,EAAYC,EARH,EACiCC,mBAAS,IAD1C,mBACNf,EADM,KACWgB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,mBAAS,IAJpC,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNZ,EALM,KAKEoB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KA8Db,OApDID,GACFX,EAAaV,EACbW,EAAWX,EAASkB,IAEpBP,EAAWX,EACXU,EAAaV,EAASkB,GAYxBK,qBAAU,WACRC,MA9BoB,0CA+BjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACJT,IAAiBE,GACnBG,EAAgB,GAIA,MAAhBL,GACc,MAAdE,GACAF,IAAiBE,GAEjBQ,MAAM,GAAD,OAnDa,yCAmDb,iBAA4BV,EAA5B,oBAAoDE,IACtDS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IACET,EAAgBS,EAAKI,MAAMhB,IAC3B,MAAOkB,GACPC,QAAQC,IAAIF,GACZG,MAAMH,SAIb,CAACpB,EAAcE,IAGhB,oCACE,yBAAKd,UAAU,SAAf,sBACA,kBAAC,EAAD,CACEL,gBAAiBA,EACjBC,iBAAkBgB,EAClBf,qBAAsB,SAACuC,GAAD,OAAOvB,EAAgBuB,EAAEC,OAAOnC,QACtDJ,OAAQU,EACRT,kBApDN,SAAgCqC,GAC9BlB,EAAUkB,EAAEC,OAAOnC,OACnBkB,GAAwB,MAoDtB,yBAAKpB,UAAU,cAAf,KACA,kBAAC,EAAD,CACEL,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,qBAAsB,SAACuC,GAAD,OAAOrB,EAAcqB,EAAEC,OAAOnC,QACpDJ,OAAQW,EACRV,kBAxDN,SAA8BqC,GAC5BlB,EAAUkB,EAAEC,OAAOnC,OACnBkB,GAAwB,QCxB5BkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4b1c095f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction CurrencyRow(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    handleCurrencyChange,\r\n    amount,\r\n    handleInputChange,\r\n  } = props;\r\n  return (\r\n    <div className=\"currency-row\">\r\n      <input type=\"number\" value={amount} onChange={handleInputChange} />\r\n      <select value={selectedCurrency} onChange={handleCurrencyChange}>\r\n        {currencyOptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyRow;\r\n","import React, { useEffect, useState } from \"react\";\nimport CurrencyRow from \"./components/CurrencyRow\";\n\nconst currencyApiLink = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  const [currencyOptions, setcurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState(\"\");\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n  let fromAmount, toAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  useEffect(() => {\n    fetch(currencyApiLink)\n      .then((res) => res.json())\n      .then((data) => {\n        const firstCurrency = Object.keys(data.rates)[0];\n        setcurrencyOptions([data.base, ...Object.keys(data.rates)]);\n        setFromCurrency(data.base);\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.rates[firstCurrency]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency === toCurrency) {\n      setExchangeRate(1);\n    }\n\n    if (\n      fromCurrency != null &&\n      toCurrency != null &&\n      fromCurrency !== toCurrency\n    ) {\n      fetch(`${currencyApiLink}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => {\n          try {\n            setExchangeRate(data.rates[toCurrency]);\n          } catch (error) {\n            console.log(error);\n            alert(error);\n          }\n        });\n    }\n  }, [fromCurrency, toCurrency]);\n\n  return (\n    <>\n      <div className=\"title\">Currency Converter</div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        handleCurrencyChange={(e) => setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        handleInputChange={handleFromAmountChange}\n      />\n      <div className=\"equal-sign\">=</div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        handleCurrencyChange={(e) => setToCurrency(e.target.value)}\n        amount={toAmount}\n        handleInputChange={handleToAmountChange}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}